// Generated by LiveScript 1.2.0
var html5, setting, m, selectStudent, editStudent, newStudent, slice$ = [].slice;
html5 = require('./components/html5');
setting = require('./components/setting');
m = require('mithril');
selectStudent = function(it){
  return m('div', [
    m('a', {
      config: m.route,
      href: "/app/students/" + it.studentId + "/quiz"
    }, [m('button', it.studentName)]), m('button', {
      onclick: this.editName.bind(this, it.studentId)
    }, 'Edit')
  ]);
};
editStudent = function(student){
  var cb, cb_, ref$;
  cb = slice$.call(arguments, 1);
  cb_ = (ref$ = cb[0]) != null
    ? ref$
    : this.newName.bind(this, student.studentId);
  return m('div', [
    m('input#edit[type="text"]', {
      value: student.studentName,
      config: function(e){
        e.onkeypress = function(){
          switch (false) {
          case e.keyCode !== 13:
            return cb_;
          }
        };
        e.focus();
      }
    }), m('button', {
      onclick: cb_
    }, 'Submit')
  ]);
};
newStudent = function(){
  var newStudent;
  switch (false) {
  case !this.newStudent:
    newStudent = {};
    newStudent.studentId = -1;
    newStudent.studentName = 'Student Name';
    return editStudent.call(this, newStudent, this.createStudent.bind(this));
  default:
    return m('div.new-student', [m('a', {
      onclick: this.editNewStudent.bind(this)
    }, [m('button', 'New Student Name')])]);
  }
};
module.exports = function(ctrl){
  var students, result;
  students = ctrl.students || [];
  return result = html5(['/css/app.css'], setting('Students', students.map(function(it){
    switch (false) {
    case !it.edit:
      return editStudent.call(ctrl, it);
    default:
      return selectStudent.call(ctrl, it);
    }
  }).concat(newStudent.call(ctrl))));
};