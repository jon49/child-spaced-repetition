// Generated by LiveScript 1.2.0
var m, r, User, Controller;
m = require('mithril');
r = require('ramda');
User = require('./../models/user');
Controller = (function(){
  Controller.displayName = 'Controller';
  var prototype = Controller.prototype, constructor = Controller;
  function Controller(){
    var self;
    self = this;
    User.students().then(function(data){
      self.students = data;
    });
  }
  prototype.studentIndex = function(studentId){
    return r.findIndex(r.propEq('studentId', studentId))(
    this.students);
  };
  prototype.editName = function(studentId){
    var editIndex;
    editIndex = this.studentIndex(studentId);
    return this.students[editIndex].edit = true;
  };
  prototype.newName = function(studentId){
    var studentIndex, $edit, newName;
    studentIndex = this.studentIndex(studentId);
    switch ($edit = document.getElementById('edit')) {
    case true:
      break;
    case newName = $edit.value:
      User.changeStudentName(studentId, newName);
      this.students[studentIndex].edit = false;
      this.students[studentIndex].studentName = newName;
      break;
    case _:
      User.deleteStudent(studentId);
      this.students.splice(studentIndex, 1);
      break;
    }
  };
  prototype.newStudent = function(){
    return this.newStudent = true;
  };
  prototype.createStudent = function(){
    var self, $edit;
    self = this;
    switch ($edit = document.getElementById('edit')) {
    case true && $edit.value:
      return User.createStudent({
        studentName: $edit.value
      }.then(function(data){
        return self.students.push(data);
      }));
    }
  };
  return Controller;
}());
module.exports = Controller;