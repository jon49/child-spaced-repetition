// Generated by LiveScript 1.2.0
var m, r, Student, Controller;
m = require('mithril');
r = require('ramda');
Student = require('../models/student');
Controller = (function(){
  Controller.displayName = 'Controller';
  var prototype = Controller.prototype, constructor = Controller;
  function Controller(){
    var self;
    self = this;
    this.studentId = m.route.param('id');
    this.performance = [];
    Student.cards(this.studentId).then(function(data){
      self.cards = data.cards, self.hints = data.hints, self.studentName = data.studentName;
      switch (!self.cards.length) {
      case true:
        m.route("/app/students/" + self.studentId + "/decks");
        break;
      default:
        self.setContent();
      }
    });
  }
  prototype.setContent = function(){
    var card;
    switch (false) {
    case !!this.cards.length:
      Student.sendStudentResult(this.studentId, this.performance);
      m.route('/app/students');
      break;
    default:
      card = this.cards.shift();
      this.content = {
        title: this.studentName,
        cardInfo: card,
        hint: r.find(r.propEq('deckId', card.deckId))(this.hints).hint
      };
    }
  };
  prototype.nextCard = function(start){
    var self;
    self = this;
    this.performance.push({
      lapsedTime: Date.now() - start,
      cardId: self.content.cardInfo.cardId
    });
    this.setContent();
  };
  return Controller;
}());
module.exports = Controller;